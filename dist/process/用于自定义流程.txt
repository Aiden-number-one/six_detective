/process/**/*
/assets/css/pages/site.css
/assets/img/process/*
/applications/(theme)/process-* 以process-开头的页面
/applications/(theme)/common-page/process/**/*

/application/pages/main.js
如果引用的是 layout.min.js，那么改为layout.js

/application/js/layouts/layout.js 47行
content.attr('style', 'min-height:' + height + 'px');
改为
content.css('min-height', height + 'px');

/assets/js/global/jquery.kingdom.js 上传文件用的upload方法
$("#" + form_id).ajaxSubmit(options);
改为
var form;
if(typeof form_id === "string"){
	form = $("#" + form_id);
}else if(typeof form_id === "object"){
	form = $(form_id);
}
form.ajaxSubmit(options);

/assets/js/global/handlebars.helper.common.js 
搜timeStampHelper，如果没有，则增加
// 时间戳显示时间（把毫秒转成日期）
Handlebars.registerHelper("timeStampHelper", function(timeSTR) {
    if (!timeSTR) {
        return '';
    }
    var date = new Date(parseInt(timeSTR));
    var Month = date.getMonth() + 1
    date = date.getFullYear() + "-" + (Month > 9 ? Month : ("0" + Month)) + "-" + (date.getDate() > 9 ? date.getDate() : ("0" + date.getDate())) + "  " + (date.getHours() > 9 ? date.getHours() : ("0" + date.getHours())) + ":" + (date.getMinutes() > 9 ? date.getMinutes() : ("0" + date.getMinutes())) + ":" + (date.getSeconds() > 9 ? date.getSeconds() : ("0" + date.getSeconds()));
    return date;
});

/assets/plugins/jquery-validation/js/additional-methods.js
搜check_m，如果没有，则添加以下校验规则
/* 用于自定义流程，自定义页面 **/
$.validator.addMethod("check_m", function(value, element) {
	return this.optional(element) || /^1[3-8]{1}[0-9]{9}$/.test(value);
}, "手机号格式有误！");
$.validator.addMethod("check_f", function(value, element) {
	return this.optional(element) || /^((0\d{2}|0\d{3})-(\d{7,8}))$|(0\d{9,11})$/.test(value);
}, "固定电话格式有误！");
$.validator.addMethod("check_idcard", function(value, element) {
	value = $.trim(value);
	var Wi = [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2, 1]; // 加权因子;
	var ValideCode = [1, 0, 10, 9, 8, 7, 6, 5, 4, 3, 2]; // 身份证验证位值，10代表X;
	if (value.length == 15) {
		return false;
	} else if (value.length == 18) {
		var a_idCard = value.split(""); // 得到身份证数组
		if (isValidityBrithBy18IdCard(value) && isTrueValidateCodeBy18IdCard(a_idCard)) {
			return true;
		}
		return false;
	}
	return false;

	function isTrueValidateCodeBy18IdCard(a_idCard) {
		var sum = 0; // 声明加权求和变量
		if (a_idCard[17].toLowerCase() == 'x') {
			a_idCard[17] = 10; // 将最后位为x的验证码替换为10方便后续操作
		}
		for (var i = 0; i < 17; i++) {
			sum += Wi[i] * a_idCard[i]; // 加权求和
		}
		valCodePosition = sum % 11; // 得到验证码所位置
		if (a_idCard[17] == ValideCode[valCodePosition]) {
			return true;
		}
		return false;
	};

	function isValidityBrithBy18IdCard(idCard18) {
		var year = idCard18.substring(6, 10);
		var month = idCard18.substring(10, 12);
		var day = idCard18.substring(12, 14);
		var temp_date = new Date(year, parseFloat(month) - 1, parseFloat(day));
		// 这里用getFullYear()获取年份，避免千年虫问题
		if (temp_date.getFullYear() != parseFloat(year) || temp_date.getMonth() != parseFloat(month) - 1 || temp_date.getDate() != parseFloat(day)) {
			return false;
		}
		return true;
		return this.optional(element) || /^90[2-5]\d\{2\}-\d{4}$/.test(value);
	};
}, "身份证格式不正确");
$.validator.addMethod("check_url", function(value, element) {
	return this.optional(element) || /^(http|ftp|https):\/\/[\w\-_]+(\.[\w\-_]+)+([\w\-\.,@?^=%&:/~\+#]*[\w\-\@?^=%&/~\+#])?/.test(value);
}, "请填写正确的网址！");
$.validator.addMethod("check_e", function(value, element) {
	return this.optional(element) || /^\w+([-+.']\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$/.test(value);
}, "请填写正确的邮箱地址！");
$.validator.addMethod("check_p", function(value, element) {
	return this.optional(element) || /^[0-9]{6}$/.test(value);
}, "请填写正确的邮政编码！");
$.validator.addMethod("check_*", function(value, element) {
	return this.optional(element) || /[\w\W]+/.test(value);
}, "不能为空");